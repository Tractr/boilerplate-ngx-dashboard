import {Component} from '@angular/core';
import {EntitySelectComponent} from '@app/abstracts';
import {ErrorService} from '@app/services';
import {<<Model pascal>>SearchParams} from '../<<Model kebab>>-search-params';
import {<<Model pascal>>Service} from '../<<Model kebab>>.service';
import {<<Model pascal>>} from '../<<Model kebab>>';

@Component({
  selector: 'hpf-<<Model kebab>>-select',
  templateUrl: '../../../abstracts/entity-select/entity-select.component.html'
})
export class <<Model pascal>>SelectComponent extends EntitySelectComponent< <<Model pascal>>> {

  /**
   * Constructor
   * @param {<<Model pascal>>Service} <<Model camel>>Service
   * @param {ErrorService} errorService
   */
  constructor(private <<Model camel>>Service: <<Model pascal>>Service,
              protected errorService: ErrorService) {
    super(errorService);
  }
  /** @inheritDoc */
  protected async getList(): Promise< <<Model pascal>>[]> {
      const params = new <<Model pascal>>SearchParams({
          _limit: this.resultsLimit,
          _page: this.currentPage
      });
<<if Fields searchable and label>>
      if (this.filterEnabled && this.filterValue) {
        params.props.<<for1 Fields searchable and label f>><<f snake>><<endfor>> = this.filterValue;
      }
<<endif>>
      return (await this.<<Model camel>>Service.list(params.toObject())).items;
  }
  /** @inheritDoc */
  protected async getOne(id: string): Promise< <<Model pascal>>> {
      return await this.<<Model camel>>Service.get(id);
  }
}
