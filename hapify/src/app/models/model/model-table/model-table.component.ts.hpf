import {Component, Input} from '@angular/core';
import {ErrorService} from '@app/services';
import {EntityTableComponent} from '@app/abstracts';
import {<<Model pascal>>SearchParams} from '../<<Model kebab>>-search-params';
import {<<Model pascal>>Service} from '../<<Model kebab>>.service';
import {<<Model pascal>>} from '../<<Model kebab>>';
 
@Component({
  selector: 'hpf-<<Model kebab>>-table',
  templateUrl: './<<Model kebab>>-table.component.html'
})
export class <<Model pascal>>TableComponent extends EntityTableComponent< <<Model pascal>>, <<Model pascal>>SearchParams> {

  /** @type {string[]} Columns to show */
  @Input() columns = [
<<for5 Fields not hidden and not primary and not (entity and not embedded) and not text and not richText f>>
    '<<f snake>>',
<<endfor>>
  ];

  /** Constructor */
  constructor(private <<Model camel>>Service: <<Model pascal>>Service,
              private errorService: ErrorService) {
    super();
  }

  /** @inheritDoc */
  protected refresh(): void {
    const params = this.searchParams.toObject();

    // Set refreshing flag
    this.refreshing = true;
    // Get list
    this.<<Model camel>>Service.list(params)
      .then((results) => {
        // Link data
        this.items = results.items;
        this.total = results.total;
      })
      .catch((error) => this.errorService.handle(error))
      .then(() => {
        this.refreshing = false;
      });
  }
 
}
