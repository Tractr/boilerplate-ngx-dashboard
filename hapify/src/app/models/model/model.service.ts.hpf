import {Injectable} from '@angular/core';
import {<<Model pascal>>, <<Model pascal>>Interface} from './<<Model kebab>>';
import {<<Model pascal>>SearchParamsInterface} from './<<Model kebab>>-search-params';
import {BaseModelService} from '@app/abstracts';
<<if Fields datetime and searchable>>
import {Helpers} from '@app/shared';
<<endif>>

@Injectable()
export class <<Model pascal>>Service extends BaseModelService< <<Model pascal>>, <<Model pascal>>Interface, <<Model pascal>>SearchParamsInterface> {
  /** @inheritDoc */
  protected path(): string {
    return '<<Model kebab>>';
  }
  /** @inheritDoc */
  protected new(object: <<Model pascal>>Interface): <<Model pascal>> {
    return new <<Model pascal>>(object);
  }
<<if Fields datetime and searchable>>
  /** @inheritDoc */
  protected transformSearchParams(searchParams: <<Model pascal>>SearchParamsInterface): <<Model pascal>>SearchParamsInterface {
	<<for Fields datetime and searchable f>>
    // Search by edge for <<f capital>>
    if (typeof searchParams.<<f snake>>__min !== 'undefined') {
      searchParams.<<f snake>>__min = Helpers.toMidnightUTC(searchParams.<<f snake>>__min);
    }
    if (typeof searchParams.<<f snake>>__max !== 'undefined') {
      searchParams.<<f snake>>__max = Helpers.toLastSecondUTC(searchParams.<<f snake>>__max);
    }
    if (typeof searchParams.<<f snake>> !== 'undefined') {
      searchParams.<<f snake>>__min = Helpers.toMidnightUTC(searchParams.<<f snake>>);
      searchParams.<<f snake>>__max = Helpers.toLastSecondUTC(searchParams.<<f snake>>);
      delete searchParams.<<f snake>>;
    }

    <<endfor>>
    return searchParams;
  }
<<endif>>
}
