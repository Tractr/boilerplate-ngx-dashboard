import {Component, OnDestroy, OnInit, AfterViewInit} from '@angular/core';
import {Router, ActivatedRoute} from '@angular/router';
import {Location} from '@angular/common';
import {Subscription as RxJsSubscription} from 'rxjs/Subscription';
import {<<Model pascal>>SearchParams} from '../../<<Model kebab>>-search-params';
import {<<Model pascal>>} from '../../<<Model kebab>>';
import {Helpers} from '@app/shared';
 
@Component({
  selector: 'hpf-<<Model kebab>>-list',
  templateUrl: './<<Model kebab>>-list.component.html',
  styleUrls: []
})
export class <<Model pascal>>ListComponent implements OnInit, AfterViewInit, OnDestroy {
 
  /** @type {<<Model pascal>>SearchParams} The filters */
  searchParams = new <<Model pascal>>SearchParams();
  /** @type {RxJsSubscription} The query subscription */
  private querySubscription: RxJsSubscription;
  /** @type {RxJsSubscription} The search params subscription */
  private paramsSubscription: RxJsSubscription;
 
  /**
   * Constructor
   * @param {ActivatedRoute} route
   * @param {Router} router
   * @param {location} location
   */
  constructor(private route: ActivatedRoute,
              private router: Router,
              private location: Location) {
  }
 
  /** Init */
  ngOnInit() {
    // Get results when params change
    this.paramsSubscription = this.searchParams.subscribe(() => {
      const params = this.searchParams.toObject();
      // Update query string
      this.location.replaceState('/<<Model kebab>>', Helpers.toQueryString(params));
    });
    // Init the search from query params
    this.querySubscription = this.route.queryParams.subscribe(params => {
      this.searchParams.fromObject(params);
    });
  }
  /** After View Init */
  ngAfterViewInit() {
    this.searchParams.next();
  }
  /** Destroy */
  ngOnDestroy() {
    this.paramsSubscription.unsubscribe();
    this.querySubscription.unsubscribe();
  }
  /** @param {<<Model pascal>>} item Called when the user select a row in the table */
  onSelect(item: <<Model pascal>>) {
    this.router.navigateByUrl(`/<<Model kebab>>/${item.getId()}`);
  }
 
}
